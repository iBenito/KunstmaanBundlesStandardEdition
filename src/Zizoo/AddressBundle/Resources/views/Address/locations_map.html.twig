{% trans_default_domain "labels" %}

<script type="text/javascript" src="http://maps.google.com/maps/api/js?sensor=false"></script>
<script type="text/javascript" src="http://google-maps-utility-library-v3.googlecode.com/svn/tags/markermanager/1.0/src/markermanager.js"></script>
<script type="text/javascript" src="http://google-maps-utility-library-v3.googlecode.com/svn/trunk/markerclusterer/src/markerclusterer_compiled.js"></script>
<div id="map"></div>

<style type="text/css">
#map {
    width: 100%;
    height: 400px;
}
</style>

<script type="text/javascript">
    
    /**
    * Initializes the map and listeners.
    */
   function initialize() {
       map = new google.maps.Map(document.getElementById('map'), {
         center: new google.maps.LatLng(38, 15),
         zoom: 2,
         mapTypeId: 'terrain'
       });
       markers = [
       {% for boat in boats %}
               {% for location in boat.addresses %}
                   {
                       'name': '{{ boat.name }}',
                       'location' : [{{ location.lat }}, {{ location.lng }}]
                   },
               {% endfor %}
       {% endfor %}
       ];

       // Prepares the marker object, creating a google.maps.Marker object for each
       // location, place and country
       if (markers) {
           for (var i = 0; i < markers.length; i++) {
             var details = markers[i];
             markers[i] = new google.maps.Marker({
               title: details.name,
               position: new google.maps.LatLng(
                    details.location[0], details.location[1]),
                    clickable: true,
                    draggable: false,
                    flat: true
             });
           }
       }
       
       mc = new MarkerClusterer(map, markers, {maxZoom: 19});
       //mc.addMarkers(markers);
   }
    
    $(document).ready(function(){
        
        /**
        * The MarkerClusterer object.
        * @type {MarkerCluster}
        */
       var mc = null;

       /**
        * The Map object.
        * @type {google.maps.Map}
        */
       var map = null;
       
       if(typeof google === 'undefined' || google==null){
            $('#map').hide();
            return;
       }
       initialize();
    });
    
</script>
{# src/Zizoo/AddressBundle/Resources/views/Form/fields.html.twig #}
{% block zizoo_unique_locations_widget %}
{% spaceless %}
    {% if expanded %}
        {{ block('zizoo_unique_locations_widget_expanded') }}
    {% else %}
        {{ block('zizoo_unique_locations_widget_collapsed') }}
    {% endif %}
{% endspaceless %}
{% endblock zizoo_unique_locations_widget %}

{% block zizoo_unique_locations_widget_expanded %}
{% spaceless %}
    <div {{ block('widget_container_attributes') }}>
    {% for child in form %}
        {{ form_widget(child) }}
        {{ form_label(child) }}
    {% endfor %}
    </div>
{% endspaceless %}
{% endblock zizoo_unique_locations_widget_expanded %}

{% block zizoo_unique_locations_widget_collapsed %}
{% spaceless %}
    <select {{ block('widget_attributes') }}{% if multiple %} multiple="multiple"{% endif %}>
        {% if empty_value is not none %}
            <option value="">{{ empty_value|trans({}, translation_domain) }}</option>
        {% endif %}
        {% if preferred_choices|length > 0 %}
            {% set options = preferred_choices %}
            {{ block('zizoo_unique_locations_widget_options') }}
            {% if choices|length > 0 and separator is not none %}
                <option disabled="disabled">{{ separator }}</option>
            {% endif %}
        {% endif %}
        {% set options = choices %}
        {{ block('zizoo_unique_locations_widget_options') }}
   </select>
{% endspaceless %}
{% endblock zizoo_unique_locations_widget_collapsed %}

{% block zizoo_unique_locations_widget_options %}
{% spaceless %}
    {% for index,choice in options %}
        {% if choice is iterable %}
            {% set country = index %}
            {% set countryData = choice %}
            <option value="{{ country }}" class="country" search="{{ country }}" {% if country == value %}selected="selected"{% endif %}>{{ country }}</option>
            {% for index,data in countryData %}
                {% if data is iterable %}
                    {% set locationData = data %}
                    {{ block('zizoo_unique_locations_widget_location_options') }}
                {% endif %}
            {% endfor %}
        {% else %}
        {% endif %}
    {% endfor %}
{% endspaceless %}
{% endblock zizoo_unique_locations_widget_options %}
                    
                    
{% block zizoo_unique_locations_widget_location_options %}
{% spaceless %}
    {% for index,choice in data %}
        {% if choice is iterable %}
            {% set location = index %}
            {% set locationData = choice %}
            {% set search = '' %}
            {% set value = '' %}
            {% for index,data in locationData %}
                {% if data.value == 'search' %}
                    {% set search = data.label %}
                {% else %}
                    {% set value = data.label %}
                {% endif %}
            {% endfor %}
            <option value="{{ value }}" class="sub" search="{{ search }}" {% if country == value %}selected="selected"{% endif %}>{{ value }}</option>
        {% else %}
        {% endif %}
    {% endfor %}
{% endspaceless %}
{% endblock zizoo_unique_locations_widget_location_options %}
            

            
            
            
            
            
{% block zizoo_address_widget_js %}
    <script type="text/javascript" src="http://maps.google.com/maps/api/js?sensor=false"></script>
    <script type="text/javascript" src="http://google-maps-utility-library-v3.googlecode.com/svn/tags/markermanager/1.0/src/markermanager.js"></script>
    <script type="text/javascript" src="http://google-maps-utility-library-v3.googlecode.com/svn/trunk/markerclusterer/src/markerclusterer_compiled.js"></script>
{% endblock zizoo_address_widget_js %}
            
{% block zizoo_address_widget %}
{{ block('zizoo_address_widget_js') }}            
{% spaceless %}
    {% if compound %}
        {{ block('form_widget_compound') }}
    {% else %}
        {{ block('form_widget_simple') }}
    {% endif %}
{% endspaceless %}

{% if map_show is not null and map_show == true %}
    <div id="{{id}}_map_div">Map loading...</div>
    <style type="text/css">
    #{{id}}_map_div {
        width: 100%;
        height: 400px;
    }
    #{{id}}_map_div img {
        max-width: none;
    }
    </style>
   
    <script type="text/javascript">
    var {{id}}_map = null;
    var {{id}}_marker = null;
    var {{id}}_mc = null;
    var {{id}}_geocoder = null;
    var {{id}}_center;
    {% if form.lat.vars.value and form.lng.vars.value %}
    {{id}}_center = new google.maps.LatLng({{form.lat.vars.value}}, {{form.lng.vars.value}});
    {% else %}
    {{id}}_center = new google.maps.LatLng(38, 15);
    {% endif %}
    var {{id}}_zoom = 9;

    function createMarker(position){
        {{id}}_marker = new google.maps.Marker({
            position: position,
            map: {{id}}_map,
            draggable: {% if map_drag is not null and map_drag == true %}true{% else %}false{% endif %},
            title: ''
        });
        {% if map_drag is not null and map_drag == true %}
        google.maps.event.addListener({{id}}_marker, 'dragend', function(evt){
            $('#{{form.lat.vars.id}}').val(evt.latLng.lat());
            $('#{{form.lng.vars.id}}').val(evt.latLng.lng());
        });
        {% endif %}
    }

    $('#{{id}}').ready(function(){
        {{id}}_geocoder = new google.maps.Geocoder();
        {{id}}_map = new google.maps.Map(document.getElementById('{{id}}_map_div'), {
            center: {{id}}_center,
            zoom: {{id}}_zoom,
            mapTypeId: 'terrain'
        });
        
        {% if form.lat.vars.value and form.lng.vars.value %}
            createMarker(new google.maps.LatLng({{form.lat.vars.value}}, {{form.lng.vars.value}}));
        {% endif %}
            
            
        {% if map_update is not null and map_update == true %}
            $('#{{ id }} input, #{{ id }} select').change(function(){
                getAddress();
            });
        {% endif %}
    });

    function getAddress(){
        var {{id}}address = new Array();
        $('#{{ id }} input:not(#{{form.lat.vars.id}}):not(#{{form.lng.vars.id}})').each(function(index, el){
            {{id}}address.push($(el).val());
        });
        {{id}}address.push($('#{{form.country.vars.id}} option:selected').html());
        codeAddress({{id}}address.join());
    }

    function codeAddress(address) {
        {{id}}_geocoder.geocode( { 'address': address}, function(results, status) {
            if (status == google.maps.GeocoderStatus.OK) {
                if ({{id}}_marker == null){
                    createMarker(results[0].geometry.location);
                } else {
                    {{id}}_marker.setPosition(results[0].geometry.location);
                }
                {{id}}_map.setCenter(results[0].geometry.location);
            } else {
                //alert('Geocode was not successful for the following reason: ' + status);
            }
        });
    }
    </script>
{% endif %}
{% endblock zizoo_address_widget %}


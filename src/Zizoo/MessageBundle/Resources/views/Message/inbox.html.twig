{% extends 'FOSMessageBundle::layout.html.twig' %}

{% block fos_message_content %}

<h2>{% trans from 'FOSMessageBundle' %}inbox{% endtrans %}</h2>

<a id="new_thread_link" href="{{ url('fos_message_thread_new' )}}">{% trans from 'FOSMessageBundle' %}send_new{% endtrans %}</a><br />

    <div id="context_hidden" style="display: none">
        <div id="delete_hidden" class="empty">{% render 'ZizooMessageBundle:Message:deleteForm' with {ajax: true } %}</div>
        <div id="thread_hidden" class="empty"></div>
        <div id="new_thread_hidden" class="empty"></div>
    </div>

    <div class="contextMenu" id="contextMenu" style="display: none">
        <ul style="width: 400px">
            <li id="open">
                <span class="ui-icon ui-icon-mail-open" style="float:left"></span>
                <span style="font-size:11px; font-family:Verdana">Open</span>
            </li>
            <li id="mark_read">
                <span class="ui-icon ui-icon-check" style="float:left"></span>
                <span style="font-size:11px; font-family:Verdana" >Mark as read</span>
            </li>
            <li id="mark_unread" style="display: none">
                <span class="ui-icon ui-icon-uncheck" style="float:left"></span>
                <span style="font-size:11px; font-family:Verdana" >Mark as unread</span>
            </li>
            <li id="del">
                <span class="ui-icon ui-icon-trash" style="float:left"></span>
                <span style="font-size:11px; font-family:Verdana">Delete</span>
            </li>
        </ul>
    </div>

    <select id="box_select" style="display: none">
        <option value="{{ path('fos_message_inbox') }}" selected="selected">Inbox</option>
        <option value="{{ path('fos_message_sent') }}">Sent Messages</option>
    </select>
    <noscript>
        <a href="{{ url('fos_message_sent' )}}">Sent Messages</a>
    </noscript>

    <div id="script">
        {{jqgrid(grid)}}
    </div>

    <noscript>
        {% include 'FOSMessageBundle:Message:threads_list.html.twig' with {'threads': grid.sourceData} %}
    </noscript>

    <script type="text/javascript">
    
    getViewport = function() {
        var $w = $(window);
        return {
            l: $w.scrollLeft(),
            t: $w.scrollTop(),
            w: $w.width(),
            h: $w.height()
        }
    }
    
    function openDeleteDialog(){
        $('#delete_thread_inner_ajax').dialog({
            modal: true,
            closeOnEscape: false,
            resizable: false
        });
    }

    function closeDeleteDialog(){
        $('#delete_thread_inner_ajax').dialog('close');            
        $('#delete_thread_inner_ajax').unblock();
    }
    
    function openNewDialog(){
        var viewport = getViewport();
        var dialogWidth = viewport['w']/2;
        var dialogHeight = viewport['h'] - 300;
        if (dialogHeight <=0) dialogHeight = viewportHeight;
        $('#new_thread_inner_ajax').dialog({
            modal: true,
            closeOnEscape: true,
            resizable: true,
            width: dialogWidth,
            maxWidth: viewport['w']-100,
            maxHeight: viewport['h']-200,
            close: function(){
                $(this).dialog('destroy');
            },
            open: function(){
                var height = $(this).height();
                var maxHeight = $(this).dialog( "option", "maxHeight");
                if (height > maxHeight){
                    $(this).dialog("option", "height", maxHeight);
                    $(this).dialog("option", "position", "center");
                }
                var width = $(this).width();
                var maxWidth = $(this).dialog("option", "maxWidth");
                if (width > maxWidth){
                    $(this).width(maxWidth);
                }
            }
        });
    }

    function closeNewDialog(){
        $('#new_thread_inner_ajax').dialog('close');            
        $('#new_thread_inner_ajax').unblock();
    }

    function openThreadDialog(){
        var viewport = getViewport();
        var dialogWidth = viewport['w']/2;
        var dialogHeight = viewport['h'] - 300;
        if (dialogHeight <=0) dialogHeight = viewportHeight;
        $('#view_thread_inner_ajax').dialog({
            modal: true,
            closeOnEscape: true,
            resizable: true,
            width: dialogWidth,
            maxWidth: viewport['w']-100,
            maxHeight: viewport['h']-200,
            close: function(){
                $(this).dialog('destroy');
            },
            open: function(){
                var height = $(this).height();
                var maxHeight = $(this).dialog( "option", "maxHeight");
                if (height > maxHeight){
                    $(this).dialog("option", "height", maxHeight);
                    $(this).dialog("option", "position", "center");
                }
                var width = $(this).width();
                var maxWidth = $(this).dialog("option", "maxWidth");
                if (width > maxWidth){
                    $(this).width(maxWidth);
                }
            }
        });
    }
    
    function closeThreadDialog(){
        $('#view_thread_inner_ajax').dialog('close');            
        $('#view_thread_inner_ajax').unblock();
    }
    
    function deleteListeners(){
        $(document).delegate('#delete_thread_inner_ajax #delete_thread_form', 'submit', function(){
            $('#delete_thread_inner_ajax').block({ message: '' });
            $.ajax({
                type: 'post', 
                url: $('#delete_thread_inner_ajax #delete_thread_form').attr('action'),
                data:$('#delete_thread_inner_ajax #delete_thread_form').serialize(),
                success: function(data, textStatus, XHR){
                    var deleteDiv = $(data).find('#delete_thread_inner_ajax');
                    if (deleteDiv.length > 0){
                        $('#delete_thread_inner_ajax').html(deleteDiv);
                        $('#delete_thread_inner_ajax').unblock();
                    } else {
                        closeDeleteDialog();
                        reloadGrid();
                    }
                },
                error: function(jqXHR, textStatus,errorThrown){
                    closeDeleteDialog();
                }
            });
            return false;
        });
    }


    function deleteThreadPopup(threadId){
        $('#delete_thread_inner_ajax #form_thread_id').val(threadId);
        $('#delete_thread_inner_ajax .cancel_btn').unbind('click').click(function(){
            closeDeleteDialog();
        });
        openDeleteDialog();
    }


    function threadListeners(){
        $(document).delegate('#view_thread_inner_ajax #send_message_form', 'submit', function(){
            $('#view_thread_inner_ajax').block({ message: '' });
            $.ajax({
                type: 'post', 
                url: $('#view_thread_inner_ajax #send_message_form').attr('action'),
                data:$('#view_thread_inner_ajax #send_message_form').serialize(),
                success: function(data, textStatus, XHR){
                    var threadDiv = $(data).find('#view_thread_inner_ajax');
                    var replyDiv  = $(data).find('#reply_to_thread_inner_ajax');
                    if (threadDiv.length > 0){
                        $('#view_thread_inner_ajax').html(threadDiv);
                        $('#view_thread_inner_ajax').unblock();
                        reloadGrid();
                    } else {
                        closeThreadDialog();
                        reloadGrid();
                    }
                },
                error: function(jqXHR, textStatus,errorThrown){
                    closeThreadDialog();
                }
            });
            return false;
        });
    }
    
    function newThreadListeners(){
        $('#new_thread_link').click(function(){
            var url = $(this).attr('href');
            newThread(url);
            return false;
        });
        $(document).delegate('#new_thread_inner_ajax #new_thread_form', 'submit', function(){
            $('#new_thread_inner_ajax').block({ message: '' });
            $.ajax({
                type: 'post', 
                url: $('#new_thread_inner_ajax #new_thread_form').attr('action'),
                data:$('#new_thread_inner_ajax #new_thread_form').serialize(),
                success: function(data, textStatus, XHR){
                    var threadDiv = $(data).find('#new_thread_inner_ajax');
                    if (threadDiv.length > 0){
                        $('#view_thread_inner_ajax').html(threadDiv);
                        $('#view_thread_inner_ajax').unblock();
                        reloadGrid();
                    } else {
                        closeNewDialog();
                        reloadGrid();
                    }
                },
                error: function(jqXHR, textStatus,errorThrown){
                    closeNewDialog();
                }
            });
            return false;
        });
    }

    function viewThread(url){
        $.blockUI({ message: '' });
        $.ajax({
            type: 'get', 
            url: url,
            success: function(data, textStatus, XHR){
                var threadDiv = $(data).find('#view_thread_inner_ajax');
                if (threadDiv.length > 0){
                    $('#thread_hidden').html(threadDiv);
                    $(document).delegate('#view_thread_inner_ajax #send_message_form .cancel_btn', 'click', function(){
                        closeThreadDialog();
                    });
                    openThreadDialog();
                } else {
                    closeThreadDialog();
                }
                reloadGrid();
                $.unblockUI();
            },
            error: function(jqXHR, textStatus,errorThrown){
                closeThreadDialog();
            }
        });
    }
    
    
    function newThread(url){
        $.blockUI({ message: '' });
        $.ajax({
            type: 'get', 
            url: url,
            success: function(data, textStatus, XHR){
                var threadDiv = $(data).find('#new_thread_inner_ajax');
                if (threadDiv.length > 0){
                    $('#new_thread_hidden').html(threadDiv);
                    $(document).delegate('#new_thread_inner_ajax #new_thread_form .cancel_btn', 'click', function(){
                        closeNewDialog();
                    });
                    openNewDialog();
                } else {
                    closeNewDialog();
                }
                $.unblockUI();
            },
            error: function(jqXHR, textStatus,errorThrown){
                closeNewDialog();
            }
        });
    }
    
    function readThread(rowId, read){
        var threadId = jQuery('#{{ grid.name|raw }}').jqGrid('getCell', rowId, 'grid_inboxId');
        $.ajax({
            type: 'get', 
            url: '{{ path('zizoo_mark_thread') }}/'+threadId+'/'+read,
            success: function(data, textStatus, XHR){
            },
            error: function(jqXHR, textStatus,errorThrown){
            }
        });
        if (read){
            jQuery('#{{ grid.name|raw }} tr#'+rowId+' td div').removeClass('unread').addClass('read');
            jQuery('#{{ grid.name|raw }}').jqGrid('setCell',rowId,'{{ grid.name|raw }}IsRead', 'read');
        } else {
            jQuery('#{{ grid.name|raw }} tr#'+rowId+' td div').removeClass('read').addClass('unread');
            jQuery('#{{ grid.name|raw }}').jqGrid('setCell',rowId,'{{ grid.name|raw }}IsRead', null);
        }
    }
    
    function threadDoubleClick(rowId, rowIndex, colIndex, e){
        var threadId = jQuery('#{{ grid.name|raw }}').jqGrid('getCell', rowId, 'grid_inboxId');
        var type = jQuery('#{{ grid.name|raw }}').jqGrid('getCell', rowId, 'grid_inboxTypeInt');
        openThread(threadId, type);
    }
    
    function reloadGrid(){
        jQuery('#{{ grid.name|raw }}').trigger('reloadGrid');
    }
    
    function loadComplete(){
        $("tr.jqgrow", this).contextMenu('contextMenu', {
            bindings: {
                'open': function(trigger) {
                    // trigger is the DOM element ("tr.jqgrow") which is triggered
                    var threadId = jQuery('#{{ grid.name|raw }}').jqGrid('getCell', trigger.id, 'grid_inboxId');
                    var type  = jQuery('#{{ grid.name|raw }}').jqGrid('getCell', trigger.id, 'grid_inboxTypeInt');
                    openThread(threadId, type);
                },
                'mark_read': function(trigger) {
                    // trigger is the DOM element ("tr.jqgrow") which is triggered
                    readThread(trigger.id, true);
                },
                'mark_unread': function(trigger) {
                    // trigger is the DOM element ("tr.jqgrow") which is triggered
                    readThread(trigger.id, false);
                },
                'del': function(trigger) {
                    // trigger is the DOM element ("tr.jqgrow") which is triggered
                    var threadId = jQuery('#{{ grid.name|raw }}').jqGrid('getCell', trigger.id, 'grid_inboxId');
                    deleteThreadPopup(threadId);
                }
            },
            onContextMenu: function(event/*, menu*/) {
                var rowId = $(event.target).closest("tr.jqgrow").attr("id");
                jQuery('#{{ grid.name|raw }}').jqGrid('setSelection', rowId);
                var isRead = jQuery('#{{ grid.name|raw }}').jqGrid('getCell',rowId,'{{ grid.name|raw }}IsRead') == 'true';
                if (isRead){
                    $('#contextMenu #mark_read').hide();
                    //$('#contextMenu #mark_unread').show();
                } else {
                    $('#contextMenu #mark_read').show();
                    //$('#contextMenu #mark_unread').hide();
                }
                return true;
            }
        });
    }
    
    
    $(document).ready(function(){
        
        $('#box_select').change(function(){
            $.blockUI({ message: '' });
            window.location.href = $(this).val();
        }).show();

        jQuery('#{{ grid.name|raw }}').jqGrid('setGridParam', { ondblClickRow: threadDoubleClick } );
        jQuery('#{{ grid.name|raw }}').jqGrid('setGridParam', { loadComplete: loadComplete } );

        deleteListeners();
        threadListeners();
        newThreadListeners();
    });

    </script>
    
    <style type="text/css">
        #pager_{{ grid.name|raw }}_left table.navtable tbody tr label {
            font-size: 11px;
            display: inline;
            margin-left: 2px;
        }
        
        .unread {
            font-weight: bolder;
        }
        
        ul.ui-menu li .ui-icon {
            position: static;
        }
    </style>

{% endblock %}

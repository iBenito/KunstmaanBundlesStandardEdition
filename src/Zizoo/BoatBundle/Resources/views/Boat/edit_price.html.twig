{% set step = app.session.get('step') %}

{% set day_available_icon   = '<span class="day_price_icon">&#10004;</span>' %}
{% set day_requested_icon   = '<span class="day_price_icon">&#10000;</span>' %}
{% set day_reserved_icon    = '<span class="day_price_icon">&#9998;</span>' %}
{% set day_unavailable_icon = '<span class="day_price_icon">&#10008;</span>' %}


{% include 'ZizooBoatBundle:Boat:boat_navigation.html.twig' with { 'boat': boat, 'current_route': routes['calendar_route'], 'routes': routes }  %}

{% block javascripts %}
    <script type="text/javascript" src="{{ asset('js/datepick/jquery.datepick.js') }}"></script>
    <script type="text/javascript" src="{{ asset('js/datepick/jquery.datepick.ext.js') }}"></script>
{% endblock %}
    
{% block stylesheets %}

{% endblock %}

<div class="content availability">
    {% set step = app.session.get('step') %}

    {% if step != "" %}
        <h3>Step {{ step }}</h3>
    {% endif %}

    {% for flashMessage in app.session.flashbag.get('error') %}
        <div class="flash-error">
            {{ flashMessage}}
        </div>
    {% endfor %}
    
    
    <div id="availability-calendar" class="">
    </div>
    <div id="availability-sidebar">
        {% include 'ZizooBoatBundle:Boat:availability_setter.html.twig' %}
        {% include 'ZizooBoatBundle:Boat:availability_legend.html.twig' %}
    </div>
    
    {% if step != "" %}
        <a href="{{ path(routes['complete_route']) }}">Complete</a>
    {% endif %}
    

    <script type="text/javascript">
        var lastSelectedDates;
        var numClicks = 0;

        function showPopup(){
            $('#popup').dialog({
                width: 470,
                maxWidth: 470,
                fluid: true,
                modal: true
            });
        }

        function checkAvailabilitySetter(){
            if ($('#date_from').val()!='' && $('#date_to').val()!=''){
                if ($('#price').val()!=''){
                    $('#availability-setter-buttons button').removeClass('disabled').attr('disabled', null);
                } else {
                    $('#availability-setter-buttons button').addClass('disabled').attr('disabled', 'disabled');
                }
                $('#price').attr('disabled', null);
            } else {
                $('#availability-setter-buttons button').addClass('disabled').attr('disabled', 'disabled');
                $('#price').attr('disabled', 'disabled');
            }
        }

        function selectDates(dates){
            if (dates.length==2){
                lastSelectedDates = dates;
                
                numClicks++;
                if (numClicks==2){
                    setHinter('type');
                    $('#zizoo_boat_availability_reservation_range_reservation_to').val(dates[1].getDateFormatted() + '/' + (dates[1].getMonthFormatted()) + '/' + dates[1].getFullYear());
                } else {
                    setHinter('to');
                    $('#zizoo_boat_availability_reservation_range_reservation_from').val(dates[0].getDateFormatted() + '/' + (dates[0].getMonthFormatted()) + '/' + dates[0].getFullYear());
                }
                if (numClicks>1) numClicks = 0;
            } 
        }

        function dateExists(dates, year, month, day){
            return (typeof dates[year]!='undefined' && typeof dates[year][month]!='undefined' && typeof dates[year][month][day]!='undefined');
        }

        function defaultDate(day){
            if (availabilityDefaultAllowed){
                return {selectable: true, dateClass: 'day_available_default', title: '&euro; ' + availabilityDefaultPrice + ' (Default price)', content: day + '{{ day_available_icon|raw }}<span class="day_price">&euro;' + availabilityDefaultPrice + '*</span>'};
            } else {
                return {selectable: true, dateClass: 'day_unavailable', title: 'Unavailable', content: day + '{{ day_unavailable_icon|raw }}<span class="day_price_icon">&#10008;</span>'};
            }
        }

        function setupCalendar(){

            Date.prototype.getDateFormatted = function() {
                var d = this.getDate();
                return d < 10 ? '0' + (d) : (d); // 
            }
            Date.prototype.getMonthFormatted = function() {
                var month = this.getMonth();
                return month < 9 ? '0' + (month+1) : (month+1); // ('' + month) for string result
            }
            Date.prototype.type = null;
            Date.prototype.setType = function(type) {
                this.type = type;
            }
            Date.prototype.getType = function() {
                return this.type;
            }
            Date.prototype.id = null;
            Date.prototype.setId = function(id) {
                this.id = id;
            }
            Date.prototype.getId = function() {
                return this.id;
            }

            $.extend($.datepick, {
                zizoo_availability: function(date) {
                    var reservedDate    = null;
                    var priceDate       = null;

                    if (dateExists(availabilityReservedDates, date.getFullYear(), date.getMonthFormatted(), date.getDateFormatted())){
                        reservedDate = availabilityReservedDates[date.getFullYear()][date.getMonthFormatted()][date.getDateFormatted()];
                    }

                    if (dateExists(availabilityPriceDates, date.getFullYear(), date.getMonthFormatted(), date.getDateFormatted())){
                        priceDate = availabilityPriceDates[date.getFullYear()][date.getMonthFormatted()][date.getDateFormatted()];
                    }

                    if (priceDate){
                        if (reservedDate){
                            if (reservedDate[0]=={{ constant('Zizoo\\ReservationBundle\\Entity\\Reservation::STATUS_ACCEPTED') }} || reservedDate[0]=={{ constant('Zizoo\\ReservationBundle\\Entity\\Reservation::STATUS_HOLD') }}){
                                return {selectable: false, dateClass: 'day_booked', title: 'Booked', content: date.getDateFormatted() + '{{ day_unavailable_icon|raw }}<span class="day_price">&euro;'+priceDate[0]+'</span><input type="hidden" class="reservation_id" value="'+reservedDate[1]+'" /><input type="hidden" class="type" value="booked" />'};
                            } else if (reservedDate[0]=={{ constant('Zizoo\\ReservationBundle\\Entity\\Reservation::STATUS_SELF') }}){
                                return {selectable: true, dateClass: 'day_reserved', title: 'Reserved', content: date.getDateFormatted() + '{{ day_reserved_icon|raw }}<span class="day_price">&euro;' + priceDate[0] + '</span><input type="hidden" class="reservation_id" value="'+reservedDate[1]+'" /><input type="hidden" class="type" value="reserved" />'};
                            } else if (reservedDate[0]=={{ constant('Zizoo\\ReservationBundle\\Entity\\Reservation::STATUS_REQUESTED') }}){
                                return {selectable: true, dateClass: 'day_requested', title: 'Requested', content: date.getDateFormatted() + '{{ day_requested_icon|raw }}<span class="day_price">&euro;' + priceDate[0] + '</span><input type="hidden" class="reservation_id" value="'+reservedDate[1]+'" /><input type="hidden" class="type" value="reserved" />'};
                            } else {
                                return {selectable: true, dateClass: 'day_available', title: '&euro; ' + priceDate[0], content: date.getDateFormatted() + '{{ day_available_icon|raw }}<span class="day_price">&euro;' + priceDate[0] + '</span>'};
                            }
                        } else {
                            return {selectable: true, dateClass: 'day_available', title: '&euro; ' + priceDate[0], content: date.getDateFormatted() + '{{ day_available_icon|raw }}<span class="day_price">&euro;' + priceDate[0] + '</span>'};
                        }
                    } else {
                        if (reservedDate){
                            if (reservedDate[0]=={{ constant('Zizoo\\ReservationBundle\\Entity\\Reservation::STATUS_ACCEPTED') }} || reservedDate[0]=={{ constant('Zizoo\\ReservationBundle\\Entity\\Reservation::STATUS_HOLD') }}){
                                return {selectable: false, dateClass: 'day_booked', title: 'Booked (Default price)', content: date.getDateFormatted() + '{{ day_unavailable_icon|raw }}<span class="day_price">'+(availabilityDefaultAllowed?availabilityDefaultPrice:'')+'*</span><input type="hidden" class="reservation_id" value="'+reservedDate[1]+'" /><input type="hidden" class="type" value="booked" />'};
                            } else if (reservedDate[0]=={{ constant('Zizoo\\ReservationBundle\\Entity\\Reservation::STATUS_SELF') }}){
                                return {selectable: true, dateClass: 'day_reserved', title: 'Reserved (Default price)', content: date.getDateFormatted() + '{{ day_reserved_icon|raw }}<span class="day_price">'+(availabilityDefaultAllowed?availabilityDefaultPrice:'')+'*</span><input type="hidden" class="reservation_id" value="'+reservedDate[1]+'" /><input type="hidden" class="type" value="reserved" />'};
                            } else if (reservedDate[0]=={{ constant('Zizoo\\ReservationBundle\\Entity\\Reservation::STATUS_REQUESTED') }}){
                                return {selectable: true, dateClass: 'day_requested', title: 'Requested (Default price)', content: date.getDateFormatted() + '{{ day_requested_icon|raw }}<span class="day_price">&euro;' + (availabilityDefaultAllowed?availabilityDefaultPrice:'') + '*</span><input type="hidden" class="reservation_id" value="'+reservedDate[1]+'" /><input type="hidden" class="type" value="reserved" />'};
                            } else {
                                return defaultDate(date.getDateFormatted());
                            }
                        }
                        return defaultDate(date.getDateFormatted());    
                    }
                }
            });



            $('#availability-calendar').datepick({ 
                rangeSelect: true,
                changeMonth: false,
                monthsToShow: [12,1],
                onDate: $.datepick.zizoo_availability,
                onSelect: selectDates,
                renderer: $.datepick.themeRollerRenderer
            });

            $('.day_reserved').hover(function(){
                var resId = $(this).find('.reservation_id').val();
                $(this).parents('tbody').find('.day_reserved').find('.reservation_id[value="'+resId+'"]').each(function(index,el){
                    $(this).parent().addClass('hover');
                });
            }, function(){
                var resId = $(this).find('.reservation_id').val();
                $(this).parents('tbody').find('.day_reserved').find('.reservation_id[value="'+resId+'"]').each(function(index,el){
                    $(this).parent().removeClass('hover');
                });
            });

            $('.day_requested').hover(function(){
                var resId = $(this).find('.reservation_id').val();
                $(this).parents('tbody').find('.day_requested').find('.reservation_id[value="'+resId+'"]').each(function(index,el){
                    $(this).parent().addClass('hover');
                });
            }, function(){
                var resId = $(this).find('.reservation_id').val();
                $(this).parents('tbody').find('.day_requested').find('.reservation_id[value="'+resId+'"]').each(function(index,el){
                    $(this).parent().removeClass('hover');
                });
            });

        }

        function setupPopup(){
            $('#type').change(function(){
                var type = $(this).val();
                if (type=='availability'){
                    $('#price').attr('readonly', null);
                    $('#price_row').show();
                } else if (type=='default') {
                    if (availabilityDefaultAllowed){
                        $('#price').attr('readonly', 'readonly').val('{{boat|displayDefaultPrice}}');
                        $('#price_row').show();
                    } else {
                        $('#price_row').hide();
                    } 
                } else {
                    $('#price_row').hide();
                }
            });
            $('#cancel_btn').click(function(){
                $('#availability-calendar').datepick('setDate', null, null);
                $('#popup').dialog('close');
            });
        }

        var availabilityReservedDates   = {{ boat|reservedDatesWithBookings(reservations)|raw }}; 
        var availabilityPriceDates      = {{ boat|priceDates(prices)|raw }};
        var availabilityDefaultAllowed  = {{ boat.hasDefaultPrice ? 'true' : 'false' }};
        var availabilityDefaultPrice    = {{ boat.defaultPrice is not null ? boat.defaultPrice : 'null' }};

        var minScrollPosition = null;
        
        function moveLegend(obj){
            var scrollTopVal = $(obj).scrollTop();
            if (scrollTopVal < minScrollPosition.top) scrollTopVal = minScrollPosition.top;
            $('#availability-sidebar').css({'top' :scrollTopVal+'px'});
        }

        function setupScroll(){
            minScrollPosition = $('#dashboard .ui-datepicker-calendar').first().position();
            $(window).scroll(function() {
                moveLegend(this);
             });
        }
        
        function setHinter(hint){
            //$('#availability-setter .step:not(.'+hint+')').removeClass('current').children('input').attr('readonly', 'readonly');
            //$('#availability-setter .step.'+hint).addClass('current').children('input').attr('readonly', null);
        }

        $(document).ready(function(){

            setupCalendar();
            setupPopup();
            setupScroll();
            moveLegend(window);
            
            //$('#date_from').change(checkAvailabilitySetter);
            //$('#date_to').change(checkAvailabilitySetter);
            //$('#price').change(checkAvailabilitySetter);
            setHinter('from');
           
        });

    </script>
</div>
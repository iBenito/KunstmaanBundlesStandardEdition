<?php

namespace Zizoo\BoatBundle\Entity;

use Doctrine\ORM\EntityRepository;
use Doctrine\ORM\Tools\Pagination\Paginator;

/**
 * BoatRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class BoatRepository extends EntityRepository
{
    public function getBoats($limit = null)
    {
        $qb = $this->createQueryBuilder('b')
                   ->select('b')
                   ->addOrderBy('b.created', 'DESC');

        if (false === is_null($limit))
            $qb->setMaxResults($limit);

        return $qb->getQuery()
                  ->getResult();
    }
    
    public function getBoatsWithAddressesAndImages($search='-1')
    {
        $qb = $this->createQueryBuilder('b')
                   ->select('b, i, a, c');
        
        if ($search!='-1'){
            $qb->where('a.locality = :search')
               ->orWhere('a.subLocality = :search')
               ->orWhere('a.state = :search')
               ->orWhere('a.province = :search')
               ->orWhere('c.printableName = :search')
               ->setParameter('search', $search);
        }
         
        $qb->leftJoin('b.image', 'i')
           ->leftJoin('b.addresses', 'a')
           ->leftJoin('a.country', 'c')
           ->addOrderBy('b.created', 'DESC');
        
        return $qb->getQuery()
                  ->getResult();
        $paginator = new Paginator($qb->getQuery(), $fetchJoinCollection = true);

        return $paginator;
    }
    
    
}
